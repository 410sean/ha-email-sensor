[
    {
        "id": "8ac86949.576f98",
        "type": "inject",
        "z": "947b74a5.58a2b8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "4",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 160,
        "wires": [
            [
                "1b8aa3fd.f6274c"
            ]
        ]
    },
    {
        "id": "1b8aa3fd.f6274c",
        "type": "ha-get-entities",
        "z": "947b74a5.58a2b8",
        "server": "a6bf5b06.8f4708",
        "name": "Email Entity",
        "rules": [
            {
                "property": "entity_id",
                "logic": "starts_with",
                "value": "sensor.email_",
                "valueType": "str"
            }
        ],
        "output_type": "random",
        "output_empty_results": false,
        "output_location_type": "msg",
        "output_location": "payload",
        "output_results_count": 1,
        "x": 310,
        "y": 160,
        "wires": [
            [
                "929a5608.1f0dc8"
            ]
        ]
    },
    {
        "id": "929a5608.1f0dc8",
        "type": "function",
        "z": "947b74a5.58a2b8",
        "name": "FedEx",
        "func": "\nconst allEmails = msg.payload.attributes.emails;\n\nconst fedexEmails = allEmails.filter(e => e.from === 'TrackingUpdates@fedex.com')\nif(fedexEmails.length === 0){\n    msg.payload = {trackingNumbers: [], count: 0};\n    return msg;\n}\n\nconst matchingString = 'tracknumbers='\nconst regex = new RegExp(matchingString, 'gi');\nconst trackingNumberLength = 12;\n\nlet result;\nconst trackingNumbers = [];\n\nfedexEmails.forEach(email => {\n   while ( (result = regex.exec(email.msg)) ) {\n        const start = result.index + matchingString.length;\n        const end = start + trackingNumberLength;\n        const trackingNumber = email.msg.substring(start, end);\n        if(!trackingNumbers.includes(trackingNumber)){\n            trackingNumbers.push(trackingNumber);\n        }\n    } \n})\n\n\nmsg.payload = {trackingNumbers, count: trackingNumbers.length};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 160,
        "wires": [
            [
                "da009c8a.b8de7"
            ]
        ]
    },
    {
        "id": "da009c8a.b8de7",
        "type": "mqtt out",
        "z": "947b74a5.58a2b8",
        "name": "MQTT FedEx",
        "topic": "fedex",
        "qos": "",
        "retain": "",
        "broker": "87bba2bf.60ac7",
        "x": 680,
        "y": 160,
        "wires": []
    },
    {
        "id": "a6bf5b06.8f4708",
        "type": "server",
        "z": "",
        "name": "Home Assistant",
        "legacy": false,
        "hassio": false,
        "rejectUnauthorizedCerts": true,
        "ha_boolean": "y|yes|true|on|home|open",
        "connectionDelay": true
    },
    {
        "id": "87bba2bf.60ac7",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    }
]